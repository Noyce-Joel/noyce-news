datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Newspaper {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  website   String?   @unique
  country   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sections  Section[]
  articles  Article[]
}

model Section {
  id          Int       @id @default(autoincrement())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  articles    Article[]
  newspaper   Newspaper @relation(fields: [newspaperId], references: [id])
  newspaperId Int

  @@unique([newspaperId, name])
}

model Article {
  id          Int        @id @default(autoincrement())
  headline    String     @db.Text
  mainImg     String?
  standFirst  String?    @db.Text
  text        String     @db.Text
  summary     String?    @db.Text
  sourceUrl   String     @unique
  tag         String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  sectionId   Int
  section     Section    @relation(fields: [sectionId], references: [id])
  newspaperId Int
  newspaper   Newspaper  @relation(fields: [newspaperId], references: [id])
  keyPoints   KeyPoints?
  urls        Url[]
}

model Headlines {
  id         Int      @id @default(autoincrement())
  headlines  String   @db.Text
  createdAt  DateTime @default(now())
  sourceUrls String[] @unique
}

model KeyPoints {
  id        Int      @id @default(autoincrement())
  keyPoints Json     @db.Json
  createdAt DateTime @default(now())
  article   Article  @relation(fields: [articleId], references: [id])
  articleId Int      @unique
}

model Url {
  id        Int      @id @default(autoincrement())
  url       String   @unique
  title     String?
  createdAt DateTime @default(now())
  sentiment String
  leaning   String
  article   Article  @relation(fields: [articleId], references: [id])
  articleId Int
}
